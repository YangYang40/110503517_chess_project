# -*- coding: utf-8 -*-
"""P1_1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SzS4s8mPl_XwJ-q5lAJQZzDtBuirDvi4
"""

checkerboard =[

[1, 0, 0, 0, 0, 0, 0, 0],

[0, 0, 0, 0, 0, 0, 0, 0],

[0, 0, 1, 0, 0, 0, 0, 0],

[0, 0, 0, 0, 0, 0, 0, 0],

[0, 0, 0, 0, 0, 0, 0, 0],

[0, 0, 0, 0, 0, 0, 0, 0],

[0, 0, 0, 0, 0, 0, 0, 0],

[0, 0, 0, 0, 0, 0, 0, 0]

]

def print_board(checkerboard):
  for row in checkerboard:

    for chess in row:

      print(chess, end=" ")

      print()

def king_rules(init,target):
 init_x = int(init[0])
 init_y = int(init[1])
 target_x = int(target[0])
 target_y = int(target[1])

 if abs(target_x - init_x) < 2 and abs(target_y - init_y) < 2 and checkerboard[target_x][target_y] != 1:
    if target_x == init_x and target_y == init_y:
      print("No")
    else:
      print("Yes")
 else:
    print("No")

init_coord = (input().split())
target_coord = (input().split())
king_rules(init_coord,target_coord)